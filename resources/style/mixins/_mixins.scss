@use 'sass:map';
@use 'sass:math';
// ===== Mixins =====

$root-font-size: 16 !default; // предполагаем, что html { font-size: 16px; }

@function px2rem($px) {
    @return math.div($px, $root-font-size) * 1rem;
}

@mixin type($fs, $lh) {
    font-size: px2rem($fs);
    line-height: math.div($lh, $fs);
}

// Один миксин: шрифт и межстрочный интервал (desktop + mobile)
@mixin adaptive_text($font-desktop, $font-mobile, $lh-desktop, $lh-mobile) {
    font-size: px2rem($font-desktop);
    line-height: px2rem($lh-desktop);

    @include respond-max(tablet) {
        font-size: px2rem($font-mobile);
        line-height: px2rem($lh-mobile);
    }
}

// Clearfix mixin
@mixin clearfix {
    &::after {
        content: '';
        display: table;
        clear: both;
    }
}

// Centering mixin
@mixin center {
    display: flex;
    justify-content: center;
    align-items: center;
}

// Button mixin
@mixin btn($bg: var(--bg-surface-dark), $radius: 8px, $height: 48px) {
    font-weight: 700;
    font-size: 14px;
    line-height: 20px;
    background: $bg;
    border-radius: $radius;
    padding: 16px 60px;
    height: $height;
    color: var(--text-inverse);
    transition: 0.2s;
    text-transform: uppercase;
    text-align: center;
    cursor: pointer;
    &:hover {
        opacity: 0.9;
    }
    &:focus {
        outline: none;
        box-shadow: 0 0 0 2px rgba(74, 105, 226, 0.5);
        border-color: transparent;
    }
}

// Input mixin
@mixin input($height: 48px) {
    height: $height;
    padding: 14.5px 16px;
    transition: 0.2s;
    border-radius: 8px;
    color: var(--text-primary);
    border: 1px solid var(--border-primary);
    width: 100%;
    box-sizing: border-box;
    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button {
        opacity: 0;
        -webkit-appearance: none;
        margin: 0;
    }
    &:focus {
        outline: none;
        box-shadow: 0 0 0 2px rgba(74, 105, 226, 0.5);
        border-color: transparent;
    }

    //&:focus ~ .label,
    //.label:focus {
    //  transform: translateY(-12px);
    //  font-size: 12px;
    //}

    &::placeholder {
        color: var(--text-secondary);
        @include type(14, 20);
    }

    &:disabled {
        border-color: var(--border-light);
        background: transparent;
    }
}

// Crop text mixin
@mixin cropText($num: 7) {
    overflow: hidden;
    text-overflow: ellipsis;
    display: -moz-box;
    -moz-box-orient: vertical;
    display: -webkit-box;
    -webkit-line-clamp: $num;
    -webkit-box-orient: vertical;
    line-clamp: $num;
    //box-orient: vertical;
}

// Adaptive title-size mixin
@mixin adaptiv_title($pcSize, $tablSize, $mobSize) {
    // Планшетное правило
    @include respond-max(tablet) {
        font-size: #{$tablSize}px;
    }

    // Базовая декларация
    & {
        font-size: #{$pcSize}px;
    }

    // Мобильное правило
    @include respond-max(phone) {
        font-size: #{$mobSize}px;
    }
}

// Adaptive line-height mixin
@mixin adaptiv_lh($pcSize, $tablSize, $mobSize) {
    // Вложенное правило может идти первым
    @include respond-max(tablet) {
        line-height: #{$tablSize}px;
    }

    // Базовая или последующие декларации возвращаем в корень селектора
    & {
        line-height: #{$pcSize}px;
    }

    @include respond-max(phone) {
        line-height: #{$mobSize}px;
    }
}

$breakpoints: (
    tablet: 1240px,
    phone: 767px, // можно добавить любые другие
);

// Миксин для медиавыражений "макс-ширина"
@mixin respond-max($label) {
    $size: map.get($breakpoints, $label);
    @if $size {
        @media screen and (max-width: $size) {
            @content;
        }
    } @else {
        @warn "Не найдена точка останова `#{$label}` в $breakpoints.";
    }
}

.select-reset {
    /* Сбрасываем нативный вид */
    -webkit-appearance: none; /* Chrome, Safari, Edge на WebKit/Blink */
    -moz-appearance: none; /* Firefox */
    appearance: none; /* современный стандарт */

    /* Для IE/Edge (старых) скрываем стрелку */
    &::-ms-expand {
        display: none;
    }
}
